// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecureCommSvc.Infrastructure.Context;

#nullable disable

namespace SecureCommSvc.Infrastructure.Migrations
{
    [DbContext(typeof(SecureConnDbContext))]
    [Migration("20240803140821_secureconn3")]
    partial class secureconn3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SecureCommSvc.Core.Entity.Channel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("DT_CRTD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_MODF")
                        .HasColumnType("datetime2");

                    b.Property<int>("STATUS")
                        .HasColumnType("int");

                    b.Property<Guid>("UNIQUE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("securekey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("channels");
                });

            modelBuilder.Entity("SecureCommSvc.Core.Entity.Chat", b =>
                {
                    b.Property<Guid>("chatid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DT_CRTD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_MODF")
                        .HasColumnType("datetime2");

                    b.Property<int>("STATUS")
                        .HasColumnType("int");

                    b.Property<Guid>("UNIQUE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("chann_id")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("del_sta")
                        .HasColumnType("bit");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<Guid>("rcvid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("read_sta")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("readdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("readtime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("replytoid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("send_sta")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("senddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("sendtime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("sessionid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sndrid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("chatid");

                    b.ToTable("chats");
                });

            modelBuilder.Entity("SecureCommSvc.Core.Entity.User", b =>
                {
                    b.Property<Guid>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BIR_DT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DT_CRTD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_MODF")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FST_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GENDER")
                        .HasColumnType("int");

                    b.Property<string>("IDP_ENR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LST_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MARITAL_STA_CODE")
                        .HasColumnType("int");

                    b.Property<string>("PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("STATUS")
                        .HasColumnType("int");

                    b.Property<int?>("TITLEID")
                        .HasColumnType("int");

                    b.Property<Guid>("UNIQUE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("chatid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.HasKey("USER_ID");

                    b.HasIndex("chatid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SecureCommSvc.Core.Entity.UserDevice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("DT_CRTD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DT_MODF")
                        .HasColumnType("datetime2");

                    b.Property<int>("STATUS")
                        .HasColumnType("int");

                    b.Property<Guid>("UNIQUE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("channel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("device_token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("userdevices");
                });

            modelBuilder.Entity("SecureCommSvc.Core.Entity.User", b =>
                {
                    b.HasOne("SecureCommSvc.Core.Entity.Chat", null)
                        .WithMany("Users")
                        .HasForeignKey("chatid");
                });

            modelBuilder.Entity("SecureCommSvc.Core.Entity.Chat", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
